import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.math.BigDecimal;

public class Main {	
/**	 * Сумма денег	 */	
private BigDecimal amount;	
/**	 * Конструктор из Double	 * 	 
* @return	 */
public Main(double money) {
String s = String.valueOf(money);
if (!s.contains(".")) {
s += ".0";		}		
this.amount = new BigDecimal(s);
}
/**	 * Вернуть сумму прописью, с точностью до копеек	 */
public String num2str() {
return num2str(false);	}	
/**	 * Выводим сумму прописью	 * 	
* @param stripkop	 *  
boolean флаг - показывать копейки или нет	 * @return String Сумма прописью	 */
public String num2str(boolean stripkop) {
String[][] sex = {				{ "", "one", "two", "three", "four", "five", "six", "seven",						"eight", "nine" },				{ "", "one", "two", "three", "four", "five", "six", "seven",						"eight", "nine" } };		String[] str100 = { "zero", "one hundred", "two hundred",				"three hundred", "four hundred", "five hundred", "six hundred",				"seven hundred", "eight hundred", "nine hundred" };		String[] str11 = { "ten", "eleven", "twelve", "thirteen", "fourteen",				"fifteen", "sixteen", "seventeen", "eighteen", "nineteen" };		String[] str10 = { "", "ten", "twenty", "thirty", "fourty", "fifty",				"sixty", "seventy", "eighty", "ninety" };		String[][] forms = { { "cent", "cents", "cents", "1" },				{ "dollar", "dollars", "dollars", "0" },				{ "thousand", "thousands", "thousands", "1" },				{ "million", "millions", "millions", "0" } };		// получаем отдельно доллары и центы		long currency = amount.longValue();		String[] moi = amount.toString().split("\\.");		long kop = Long.valueOf(moi[1]);		if (!moi[1].substring(0, 1).equals("0")) {// начинается не с нуля			if (kop < 10) {				kop *= 10;			}		}		String kops = String.valueOf(kop);		if (kops.length() == 1) {			kops = "0" + kops;		}				String strCents = "";				String[] arrCents = new String[3];		arrCents[0] = kops.substring(0, 1);		arrCents[1] = kops.substring(1, 2); 					arrCents[2] = kops.substring(0, 2);				int numKops = Integer.parseInt(kops);				if( numKops == 0){			strCents += str100[0] + " ";		}				if (numKops == 20) {			strCents += str10[2] + " ";		}else if(numKops == 30){			strCents += str10[3] + " ";		}else if(numKops == 40){			strCents += str10[4] + " ";		}else if(numKops == 50){			strCents += str10[5] + " ";		}else if(numKops == 60){			strCents += str10[6] + " ";		}else if(numKops == 70){			strCents += str10[7] + " ";		}else if(numKops == 80){			strCents += str10[8] + " ";		}else if(numKops == 90){			strCents += str10[9] + " ";				}else if(numKops > 20){			strCents += str10[Integer.parseInt(arrCents[0])] + " ";			strCents += sex[0][Integer.parseInt(arrCents[1])] + " ";		}else if (numKops > 9 && numKops < 20){			strCents += str11[numKops - 10] + " ";			}else if (numKops < 10){														strCents += sex[0][Integer.parseInt(arrCents[2])] + " ";			}				long currency_tmp = currency;		// Разбиватель суммы на сегменты по 3 цифры с конца		ArrayList segments = new ArrayList();		while (currency_tmp > 999) {			long seg = currency_tmp / 1000;			segments.add(currency_tmp - (seg * 1000));			currency_tmp = seg;		}		segments.add(currency_tmp);		Collections.reverse(segments);		// снализируем сегменты		String o = "";		if (currency == 0) {// если ноль			o = "zero " + morph(0, forms[1][0], forms[1][1], forms[1][2]);			if (stripkop) {				return o;			} else {				return o + " " + strCents + ""					+ morph(kop, forms[0][0], forms[0][1], forms[0][2]);			}		}				// Больше нуля		int lev = segments.size();		for (int i = 0; i < segments.size(); i++) {// перебираем сегменты			int sexi = (int) Integer.valueOf(forms[lev][3].toString());// определяем																		// род			int ri = (int) Integer.valueOf(segments.get(i).toString());// текущий																		// сегмент			if (ri == 0 && lev > 1) {// если сегмент ==0 И не последний										// уровень(там Units)				lev--;				continue;			}			String rs = String.valueOf(ri); // число в строку					// нормализация			if (rs.length() == 1) {				rs = "00" + rs;			}			if (rs.length() == 2) {				rs = "0" + rs; 			}// получаем циферки для анализа			int r1 = (int) Integer.valueOf(rs.substring(0, 1)); // первая цифра			int r2 = (int) Integer.valueOf(rs.substring(1, 2)); // вторая			int r3 = (int) Integer.valueOf(rs.substring(2, 3)); // третья			int r22 = (int) Integer.valueOf(rs.substring(1, 3)); // вторая и																	// третья			// Супер-нано-анализатор циферок			if (ri > 99) {				o += str100[r1] + " "; // Сотни			}			if (r22 > 20) {// >20				o += str10[r2] + " ";				o += sex[sexi][r3] + " ";			} else { // <=20				if (r22 > 9) {					o += str11[r22 - 10] + " "; // 10-20				} else {					o += sex[sexi][r3] + " "; // 0-9				}			}						// Единицы измерения (доллар...)			o += morph(ri, forms[lev][0], forms[lev][1], forms[lev][2]) + " ";			lev--;		}				// Копейки в цифровом виде		if (stripkop) {			o = o.replaceAll(" {2,}", " ");		} else {			o = o + "" + strCents + " "								+ morph(kop, forms[0][0], forms[0][1], forms[0][2]);			o = o.replaceAll(" {2,}", " ");		}		return o;	}	/**	 * Склонсем словоформу	 * 	 * @param n	 *            Long количество объектов	 * @param f1	 *            String вариант словоформы  одного объекта	 * @param f2	 *            String вариант словоформы  двух объектов	 * @param f5	 *            String вариант словоформы  пяти объектов	 * @return String правильный вариант словоформы для указанного количества	 *         объектов	 */	public static String morph(long n, String f1, String f2, String f5) {		n = Math.abs(n) % 100;		long n1 = n % 10;		if (n > 10 && n < 20) {			return f5;		}		if (n1 > 1 && n1 < 5) {			return f2;		}		if (n1 == 1) {			return f1;		}		return f5;	}	public static void main(String[] args) {		Scanner sc = new Scanner(System.in);		System.out.println("How much money do you have?");		double money = sc.nextDouble();		Main cloneMain = new Main(money);
System.out.println("You have: " + cloneMain.num2str());
sc.close();	}}
